version: "3.9"
services:
  # Postgres Service
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes: 
      - pgdata:/var/lib/postgresql/data
      - pgdata-management:/var/lib/pgdata-management
    ports:
      - "5432:5432"
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # Core API Service
  api:
    extends:
      file: ../api-${NODE_ENV}/docker-compose.yml
      service: api
    depends_on:
      - postgres
    environment:
      NODE_ENV: ${NODE_ENV}
      debugMode: "false"
      testMode: "true"
      restoreMode: "false"
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
      telegraf: ${telegraf}
      recaptchaSecret: ${recaptchaSecret}
      god: ${god}
      binance: ${binance}
      firebase: ${firebase}
      PORT: 5075
    ports:
      - "5075:5075"
    volumes: 
      - pgdata-management:/var/lib/pgdata-management
      - epoch:/var/lib/epoch
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # Prediction API Service
  prediction-api:
    extends:
      file: ../prediction-api-${NODE_ENV}/docker-compose.yml
      service: prediction-api
    depends_on:
      - postgres
      - api
    environment:
      NODE_ENV: ${NODE_ENV}
      FLASK_ENV: ${NODE_ENV}
      FLASK_APP: "dist/index.py"
      FLASK_RUN_HOST: "0.0.0.0"
      FLASK_DEBUG: "False"
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
      PYTHONPATH: "/usr/src/app/dist"
      debugMode: "false"
      testMode: "true"
      restoreMode: "false"
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 5000
    ports:
      - "5000:5000"
    volumes: 
      - epoch:/var/lib/epoch
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
volumes:
    pgdata:
    pgdata-management:
    epoch: