"use strict";var __awaiter=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))(function(r,a){function c(e){try{l(o.next(e))}catch(e){a(e)}}function s(e){try{l(o.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(c,s)}l((o=o.apply(e,t||[])).next())})},__generator=this&&this.__generator||function(e,t){var n,o,r,a,c={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,o&&(r=2&a[0]?o.return:a[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,a[1])).done)return r;switch(o=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return c.label++,{value:a[1],done:!1};case 5:c.label++,o=a[1],a=[0];continue;case 7:a=c.ops.pop(),c.trys.pop();continue;default:if(!(r=(r=c.trys).length>0&&r[r.length-1])&&(6===a[0]||2===a[0])){c=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){c.label=a[1];break}if(6===a[0]&&c.label<r[1]){c.label=r[1],r=a;break}if(r&&c.label<r[2]){c.label=r[2],c.ops.push(a);break}r[2]&&c.ops.pop(),c.trys.pop();continue}a=t.call(e,c)}catch(e){a=[6,e],o=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(exports,"__esModule",{value:!0});var execute_1=require("@getvim/execute");function main(){return __awaiter(this,void 0,void 0,function(){var e,t,n;return __generator(this,function(o){switch(o.label){case 0:e=String(Date.now()+".dump"),o.label=1;case 1:return o.trys.push([1,3,,4]),console.log(" "),console.log("1/2) Dumping database into the pgdata-management volume..."),[4,(0,execute_1.execute)("docker exec postgres docker-entrypoint.sh pg_dump -U postgres -f /var/lib/pgdata-management/".concat(e," -Fc"))];case 2:return o.sent(),console.log("Database Backup ".concat(e," was dumped successfully.")),console.log(" "),[3,4];case 3:throw t=o.sent(),console.error("Error in task 1: ",t),t;case 4:return o.trys.push([4,6,,7]),console.log(" "),console.log("2/2) Uploading database dump to Firebase Storage..."),[4,(0,execute_1.execute)("docker exec api node dist/cli/databaseManagement.js backup ".concat(e))];case 5:return o.sent(),console.log("The Database Backup ".concat(e," has been uploaded successfully.")),console.log(" "),[3,7];case 6:throw n=o.sent(),console.error("Error in task 2: ",n),n;case 7:return[2]}})})}console.log(""),console.log("DATABASE BACKUP"),console.log(" "),main().then(function(){process.exit(0)}).catch(function(e){process.exit(1)});