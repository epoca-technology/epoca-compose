version: "3.9"
services:
  # Postgres Service
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes: 
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # PG Admin Service
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8080:80"
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # API Service
  api:
    extends:
      file: ../api-${NODE_ENV}/docker-compose.yml
      service: api
    depends_on:
      - postgres
    environment:
      NODE_ENV: ${NODE_ENV}
      testMode: ${testMode}
      debugMode: ${debugMode}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      telegraf: ${telegraf}
      recaptchaSecret: ${recaptchaSecret}
      god: ${god}
      firebase: ${firebase}
      PORT: 5075
    ports:
      - "5075:5075"
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # Forecast API Service
  forecast-api:
    extends:
      file: ../forecast-api-${NODE_ENV}/docker-compose.yml
      service: forecast-api
    depends_on:
      - postgres
      - api
    environment:
      NODE_ENV: ${NODE_ENV}
      testMode: ${testMode}
      debugMode: ${debugMode}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 5000
    ports:
      - "5000:5000"
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # Dozzle Service      
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      DOZZLE_TAILSIZE: 300
      DOZZLE_USERNAME: ${DOZZLE_USERNAME}
      DOZZLE_PASSWORD: ${DOZZLE_PASSWORD}
      DOZZLE_KEY: ${DOZZLE_KEY}
      DOZZLE_NO_ANALYTICS: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8085:8080
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"
  # GUI Service
  gui:
    extends:
      file: ../gui-${NODE_ENV}/docker-compose.yml
      service: gui
    build: 
      args:
        NODE_ENV: ${NODE_ENV}
    depends_on:
      - postgres
      - api
      - forecast-api
    ports:
      - "8090:80"
    logging:
      driver: local
      options:
        max-size: 10m
        max-file: "10"

volumes:
    pgdata:
    pgadmin-data: